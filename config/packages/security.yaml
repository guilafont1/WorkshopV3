security:
  # Gestion des encodages de mots de passe
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  # Gestion des utilisateurs
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    # Configuration du firewall principal
    main:
      lazy: true
      provider: app_user_provider
      form_login:
        login_path: app_login
        check_path: app_login
        enable_csrf: true
        # Optionnel : définir où rediriger après connexion réussie
        default_target_path: app_home
      logout:
        path: app_logout
        # Rediriger après déconnexion réussie
        target: app_home

  # Contrôle d'accès global (en dehors des firewalls)
  access_control:
    # Restreindre l'accès à certaines pages seulement pour les utilisateurs connectés
    # Restreindre l'accès à "Mes Réservations" aux utilisateurs ayant le rôle "ROLE_USER"
    - { path: ^/mes_reservations, roles: ROLE_USER }
    # Restreindre l'accès au profil utilisateur aux utilisateurs connectés
    - { path: ^/profile, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      # Réduction de la complexité des mots de passe pour les tests
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Valeur minimale pour bcrypt
        time_cost: 3 # Valeur minimale pour argon
        memory_cost: 10 # Valeur minimale pour argon
